# escape=`

FROM bhl-vs-2022

ENV BHL_BUILD_DATE="2024-07-21.1"
ENV BHL_GIT_VERSION="2.45.2"
ENV BHL_PYTHON_VERSION="3.11.6"
ENV BHL_CMAKE_VERSION="3.30.1"
ENV BHL_7ZIP_VERSION="2407"
ENV BHL_NINJA_VERSION="1.12.1"

# Restore the default Windows shell for correct batch processing.
SHELL ["cmd", "/S", "/C"]

# Install Git
WORKDIR C:/Downloads
RUN curl --fail -L `
        https://github.com/git-for-windows/git/releases/download/v%BHL_GIT_VERSION%.windows.1/Git-%BHL_GIT_VERSION%-64-bit.exe `
        -o Git-Installer.exe

RUN Git-Installer.exe `
        /VERYSILENT `
        /NORESTART `
        /NOCANCEL

RUN del Git-Installer.exe

# Install Python
WORKDIR C:/Downloads
RUN curl --fail -L `
        https://www.python.org/ftp/python/%BHL_PYTHON_VERSION%/python-%BHL_PYTHON_VERSION%-amd64.exe `
        -o Python-Installer.exe

RUN Python-Installer.exe `
        /quiet `
        InstallAllUsers=1 `
        PrependPath=1 `
        Include_test=0

RUN del Python-Installer.exe

# Install CMake
WORKDIR C:/Downloads
RUN curl --fail -L `
        https://github.com/Kitware/CMake/releases/download/v%BHL_CMAKE_VERSION%/cmake-%BHL_CMAKE_VERSION%-windows-x86_64.msi `
        -o CMake-Installer.msi

RUN MsiExec.exe `
        /i CMake-Installer.msi `
        ADD_CMAKE_TO_PATH=System `
        /qn

RUN del CMake-Installer.msi

# Install 7zip
WORKDIR C:/Downloads
RUN curl --fail -L `
        https://7-zip.org/a/7z%BHL_7ZIP_VERSION%-x64.exe `
        -o 7Zip-Installer.exe

RUN 7Zip-Installer.exe `
        /S

RUN del 7Zip-Installer.exe

# Install Ninja
WORKDIR C:/Downloads
RUN curl --fail -L `
        https://github.com/ninja-build/ninja/releases/download/v%BHL_NINJA_VERSION%/ninja-win.zip `
        -o ninja-win.zip

WORKDIR C:/Software/bin
RUN ("C:\Program Files\7-Zip\7z.exe" e C:/Downloads/ninja-win.zip)
RUN setx path "%path%;C:/Software/bin"

WORKDIR C:/Downloads
RUN del ninja-win.zip

# Set up envvars
ENV BHL_PREFIX_PATH=C:/bhl/prefix
RUN setx BHL_PREFIX_PATH %BHL_PREFIX_PATH%
RUN setx CMAKE_PREFIX_PATH %BHL_PREFIX_PATH%

# Set up VC++ vars for x86
# And use PowerShell because this is easier and definitely won't backfire down the road
SHELL ["C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\Common7\\Tools\\VsDevCmd.bat", "&&", "powershell.exe", "-NoLogo", "-ExecutionPolicy", "Bypass"]

# Reset workdir
WORKDIR C:/build
